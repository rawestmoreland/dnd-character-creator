{"ast":null,"code":"var _jsxFileName = \"/Users/richard/Desktop/ReactApps/dnd-project/client/src/components/CharacterList.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router';\nimport { Container, ListGroup, ListGroupItem, Button } from 'reactstrap';\nimport { getCharacters } from '../actions/characterActions';\n\nclass CharacterList extends Component {\n  componentDidMount() {\n    this.props.getCharacters();\n  }\n\n  render() {\n    const _this$props = this.props,\n          characters = _this$props.characters,\n          loading = _this$props.loading;\n    return React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, React.createElement(ListGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, characters.map(({\n      _id,\n      name\n    }) => React.createElement(Link, {\n      to: characters.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(ListGroupItem, {\n      key: _id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, name, \" \")))));\n  }\n\n}\n\nCharacterList.propTypes = {\n  getCharacters: PropTypes.func.isRequired,\n  characters: PropTypes.array.isRequired,\n  loading: PropTypes.bool\n};\n\nconst mapStateToProps = state => ({\n  characters: state.character.characters,\n  loading: state.character.loading\n});\n\nexport default connect(mapStateToProps, {\n  getCharacters\n})(CharacterList);","map":{"version":3,"sources":["/Users/richard/Desktop/ReactApps/dnd-project/client/src/components/CharacterList.js"],"names":["React","Component","connect","PropTypes","Link","Container","ListGroup","ListGroupItem","Button","getCharacters","CharacterList","componentDidMount","props","render","characters","loading","map","_id","name","propTypes","func","isRequired","array","bool","mapStateToProps","state","character"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,IAAT,QAAqB,cAArB;AACA,SAASC,SAAT,EAAoBC,SAApB,EAA+BC,aAA/B,EAA8CC,MAA9C,QAA4D,YAA5D;AAEA,SAASC,aAAT,QAA8B,6BAA9B;;AAEA,MAAMC,aAAN,SAA4BT,SAA5B,CAAsC;AACpCU,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,KAAL,CAAWH,aAAX;AACD;;AAQDI,EAAAA,MAAM,GAAG;AAAA,wBACyB,KAAKD,KAD9B;AAAA,UACCE,UADD,eACCA,UADD;AAAA,UACaC,OADb,eACaA,OADb;AAEP,WACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGD,UAAU,CAACE,GAAX,CAAe,CAAC;AAAEC,MAAAA,GAAF;AAAOC,MAAAA;AAAP,KAAD,KACd,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAEJ,UAAU,CAACI,IAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,aAAD;AAAe,MAAA,GAAG,EAAED,GAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA0BC,IAA1B,MADF,CADD,CADH,CADF,CADF;AAWD;;AAxBmC;;AAAhCR,a,CAKGS,S,GAAY;AACjBV,EAAAA,aAAa,EAAEN,SAAS,CAACiB,IAAV,CAAeC,UADb;AAEjBP,EAAAA,UAAU,EAAEX,SAAS,CAACmB,KAAV,CAAgBD,UAFX;AAGjBN,EAAAA,OAAO,EAAEZ,SAAS,CAACoB;AAHF,C;;AAsBrB,MAAMC,eAAe,GAAGC,KAAK,KAAK;AAChCX,EAAAA,UAAU,EAAEW,KAAK,CAACC,SAAN,CAAgBZ,UADI;AAEhCC,EAAAA,OAAO,EAAEU,KAAK,CAACC,SAAN,CAAgBX;AAFO,CAAL,CAA7B;;AAKA,eAAeb,OAAO,CACpBsB,eADoB,EAEpB;AAAEf,EAAAA;AAAF,CAFoB,CAAP,CAGbC,aAHa,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\nimport { Link } from 'react-router'\nimport { Container, ListGroup, ListGroupItem, Button } from 'reactstrap'\n\nimport { getCharacters } from '../actions/characterActions'\n\nclass CharacterList extends Component {\n  componentDidMount() {\n    this.props.getCharacters()\n  }\n\n  static propTypes = {\n    getCharacters: PropTypes.func.isRequired,\n    characters: PropTypes.array.isRequired,\n    loading: PropTypes.bool\n  }\n\n  render() {\n    const { characters, loading } = this.props\n    return (\n      <Container>\n        <ListGroup>\n          {characters.map(({ _id, name }) => (\n            <Link to={characters.name}>\n              <ListGroupItem key={_id}>{name} </ListGroupItem>\n            </Link>\n          ))}\n        </ListGroup>\n      </Container>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  characters: state.character.characters,\n  loading: state.character.loading\n})\n\nexport default connect(\n  mapStateToProps,\n  { getCharacters }\n)(CharacterList)\n"]},"metadata":{},"sourceType":"module"}
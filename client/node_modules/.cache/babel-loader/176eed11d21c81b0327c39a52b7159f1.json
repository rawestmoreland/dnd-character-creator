{"ast":null,"code":"var _jsxFileName = \"/Users/richard/Desktop/ReactApps/dnd-project/client/src/components/CharacterList.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { Container, ListGroup, ListGroupItem, Spinner, Button, Row, Col } from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTimesCircle } from '@fortawesome/free-solid-svg-icons';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport { getCharacters, deleteCharacter } from '../actions/characterActions';\nimport CharacterModal from './CharacterModal';\n\nclass CharacterList extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      edit: false\n    };\n\n    this.onDeleteClick = id => {\n      this.props.deleteCharacter(id);\n\n      if (this.props.characters.length === 1) {\n        this.setState({\n          edit: false\n        });\n      }\n    };\n\n    this.edit = () => {\n      this.setState({\n        edit: !this.state.edit\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.props.getCharacters();\n  }\n\n  render() {\n    const _this$props = this.props,\n          characters = _this$props.characters,\n          loading = _this$props.loading;\n    return React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(CharacterModal, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }), !loading ? React.createElement(ListGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(TransitionGroup, {\n      className: \"shopping-list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, characters.map(({\n      _id,\n      name\n    }) => React.createElement(CSSTransition, {\n      key: _id,\n      timeout: 500,\n      classNames: \"fade\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(ListGroupItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(Col, {\n      xs: \"10\",\n      className: \"d-flex align-items-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"Character Name: \".concat(name)), React.createElement(Col, {\n      xs: \"2\",\n      className: \"d-flex justify-content-end\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(FontAwesomeIcon, {\n      icon: faTimesCircle,\n      color: \"red\",\n      onClick: this.onDeleteClick.bind(this, _id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    })))))))) : React.createElement(Container, {\n      className: \"spinner-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(Spinner, {\n      style: {\n        width: '3rem',\n        height: '3rem'\n      },\n      color: \"secondary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    })));\n  }\n\n}\n\nCharacterList.propTypes = {\n  getCharacters: PropTypes.func.isRequired,\n  deleteCharacter: PropTypes.func.isRequired,\n  characters: PropTypes.array.isRequired,\n  loading: PropTypes.bool\n};\n\nconst mapStateToProps = state => ({\n  characters: state.character.characters,\n  loading: state.character.loading\n});\n\nexport default connect(mapStateToProps, {\n  getCharacters,\n  deleteCharacter\n})(CharacterList);","map":{"version":3,"sources":["/Users/richard/Desktop/ReactApps/dnd-project/client/src/components/CharacterList.js"],"names":["React","Component","connect","PropTypes","Link","Container","ListGroup","ListGroupItem","Spinner","Button","Row","Col","FontAwesomeIcon","faTimesCircle","CSSTransition","TransitionGroup","getCharacters","deleteCharacter","CharacterModal","CharacterList","state","edit","onDeleteClick","id","props","characters","length","setState","componentDidMount","render","loading","map","_id","name","bind","width","height","propTypes","func","isRequired","array","bool","mapStateToProps","character"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\nimport { Link } from 'react-router-dom'\nimport {\n  Container,\n  ListGroup,\n  ListGroupItem,\n  Spinner,\n  Button,\n  Row,\n  Col\n} from 'reactstrap'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimesCircle } from '@fortawesome/free-solid-svg-icons'\nimport { CSSTransition, TransitionGroup } from 'react-transition-group'\nimport { getCharacters, deleteCharacter } from '../actions/characterActions'\nimport CharacterModal from './CharacterModal'\n\nclass CharacterList extends Component {\n  state = {\n    edit: false\n  }\n\n  componentDidMount() {\n    this.props.getCharacters()\n  }\n\n  static propTypes = {\n    getCharacters: PropTypes.func.isRequired,\n    deleteCharacter: PropTypes.func.isRequired,\n    characters: PropTypes.array.isRequired,\n    loading: PropTypes.bool\n  }\n\n  onDeleteClick = id => {\n    this.props.deleteCharacter(id)\n\n    if (this.props.characters.length === 1) {\n      this.setState({\n        edit: false\n      })\n    }\n  }\n\n  edit = () => {\n    this.setState({\n      edit: !this.state.edit\n    })\n  }\n\n  render() {\n    const { characters, loading } = this.props\n\n    return (\n      <Container>\n        <CharacterModal />\n        {!loading ? (\n          <ListGroup>\n            <TransitionGroup className='shopping-list'>\n              {characters.map(({ _id, name }) => (\n                <CSSTransition key={_id} timeout={500} classNames='fade'>\n                  <ListGroupItem>\n                    <Row>\n                      <Col xs='10' className='d-flex align-items-center'>\n                        {`Character Name: ${name}`}\n                      </Col>\n                      <Col xs='2' className='d-flex justify-content-end'>\n                        <FontAwesomeIcon\n                          icon={faTimesCircle}\n                          color='red'\n                          onClick={this.onDeleteClick.bind(this, _id)}\n                        />\n                      </Col>\n                    </Row>\n                  </ListGroupItem>\n                </CSSTransition>\n              ))}\n            </TransitionGroup>\n          </ListGroup>\n        ) : (\n          <Container className='spinner-container'>\n            <Spinner\n              style={{ width: '3rem', height: '3rem' }}\n              color='secondary'\n            />\n          </Container>\n        )}\n      </Container>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  characters: state.character.characters,\n  loading: state.character.loading\n})\n\nexport default connect(\n  mapStateToProps,\n  { getCharacters, deleteCharacter }\n)(CharacterList)\n"]},"metadata":{},"sourceType":"module"}
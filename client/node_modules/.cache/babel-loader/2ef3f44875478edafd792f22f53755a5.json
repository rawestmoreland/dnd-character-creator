{"ast":null,"code":"var _jsxFileName = \"/Users/richard/Desktop/ReactApps/dnd-project/client/src/components/CharacterList.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { Container, ListGroup, ListGroupItem, Button } from 'reactstrap';\nimport { getCharacters } from '../actions/characterActions';\n\nclass CharacterList extends Component {\n  componentDidMount() {\n    this.props.getCharacters();\n  }\n\n  render() {\n    const _this$props = this.props,\n          characters = _this$props.characters,\n          loading = _this$props.loading;\n    return React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, React.createElement(ListGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, Object.keys(characters).map((key, _id) => {\n      const name = characters[key].name;\n      return React.createElement(Link, {\n        to: name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, React.createElement(ListGroupItem, {\n        key: _id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, name));\n    })));\n  }\n\n}\n\nCharacterList.propTypes = {\n  getCharacters: PropTypes.func.isRequired,\n  characters: PropTypes.array.isRequired,\n  loading: PropTypes.bool\n};\n\nconst mapStateToProps = state => ({\n  characters: state.character.characters,\n  loading: state.character.loading\n});\n\nexport default connect(mapStateToProps, {\n  getCharacters\n})(CharacterList);","map":{"version":3,"sources":["/Users/richard/Desktop/ReactApps/dnd-project/client/src/components/CharacterList.js"],"names":["React","Component","connect","PropTypes","Link","Container","ListGroup","ListGroupItem","Button","getCharacters","CharacterList","componentDidMount","props","render","characters","loading","Object","keys","map","key","_id","name","propTypes","func","isRequired","array","bool","mapStateToProps","state","character"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,SAAT,EAAoBC,SAApB,EAA+BC,aAA/B,EAA8CC,MAA9C,QAA4D,YAA5D;AAEA,SAASC,aAAT,QAA8B,6BAA9B;;AAEA,MAAMC,aAAN,SAA4BT,SAA5B,CAAsC;AACpCU,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,KAAL,CAAWH,aAAX;AACD;;AAQDI,EAAAA,MAAM,GAAG;AAAA,wBACyB,KAAKD,KAD9B;AAAA,UACCE,UADD,eACCA,UADD;AAAA,UACaC,OADb,eACaA,OADb;AAEP,WACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGC,MAAM,CAACC,IAAP,CAAYH,UAAZ,EAAwBI,GAAxB,CAA4B,CAACC,GAAD,EAAMC,GAAN,KAAc;AACzC,YAAMC,IAAI,GAAGP,UAAU,CAACK,GAAD,CAAV,CAAgBE,IAA7B;AACA,aACE,oBAAC,IAAD;AAAM,QAAA,EAAE,EAAEA,IAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,aAAD;AAAe,QAAA,GAAG,EAAED,GAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA0BC,IAA1B,CADF,CADF;AAKD,KAPA,CADH,CADF,CADF;AAcD;;AA3BmC;;AAAhCX,a,CAKGY,S,GAAY;AACjBb,EAAAA,aAAa,EAAEN,SAAS,CAACoB,IAAV,CAAeC,UADb;AAEjBV,EAAAA,UAAU,EAAEX,SAAS,CAACsB,KAAV,CAAgBD,UAFX;AAGjBT,EAAAA,OAAO,EAAEZ,SAAS,CAACuB;AAHF,C;;AAyBrB,MAAMC,eAAe,GAAGC,KAAK,KAAK;AAChCd,EAAAA,UAAU,EAAEc,KAAK,CAACC,SAAN,CAAgBf,UADI;AAEhCC,EAAAA,OAAO,EAAEa,KAAK,CAACC,SAAN,CAAgBd;AAFO,CAAL,CAA7B;;AAKA,eAAeb,OAAO,CACpByB,eADoB,EAEpB;AAAElB,EAAAA;AAAF,CAFoB,CAAP,CAGbC,aAHa,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\nimport { Link } from 'react-router-dom'\nimport { Container, ListGroup, ListGroupItem, Button } from 'reactstrap'\n\nimport { getCharacters } from '../actions/characterActions'\n\nclass CharacterList extends Component {\n  componentDidMount() {\n    this.props.getCharacters()\n  }\n\n  static propTypes = {\n    getCharacters: PropTypes.func.isRequired,\n    characters: PropTypes.array.isRequired,\n    loading: PropTypes.bool\n  }\n\n  render() {\n    const { characters, loading } = this.props\n    return (\n      <Container>\n        <ListGroup>\n          {Object.keys(characters).map((key, _id) => {\n            const name = characters[key].name\n            return (\n              <Link to={name}>\n                <ListGroupItem key={_id}>{name}</ListGroupItem>\n              </Link>\n            )\n          })}\n        </ListGroup>\n      </Container>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  characters: state.character.characters,\n  loading: state.character.loading\n})\n\nexport default connect(\n  mapStateToProps,\n  { getCharacters }\n)(CharacterList)\n"]},"metadata":{},"sourceType":"module"}
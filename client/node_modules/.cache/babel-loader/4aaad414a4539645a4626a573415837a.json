{"ast":null,"code":"import _defineProperty from \"/Users/richard/Desktop/ReactApps/dnd-project/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { GET_SPELLS, GET_CLASSES, GET_RACES, ITEMS_LOADING } from '../actions/types';\nconst initialState = {\n  spells: [],\n  classes: [],\n  races: [],\n  loading: false\n};\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case GET_SPELLS:\n      return _objectSpread({}, state, {\n        spells: action.payload,\n        loading: false\n      });\n\n    case GET_CLASSES:\n      return _objectSpread({}, state, {\n        classes: action.payload,\n        loading: false\n      });\n\n    case GET_RACES:\n      return _objectSpread({}, state, {\n        races: action.payload,\n        loading: false\n      });\n\n    case ITEMS_LOADING:\n      return _objectSpread({}, state, {\n        loading: true\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/richard/Desktop/ReactApps/dnd-project/client/src/reducers/externalAPIReducer.js"],"names":["GET_SPELLS","GET_CLASSES","GET_RACES","ITEMS_LOADING","initialState","spells","classes","races","loading","state","action","type","payload"],"mappings":";;;;;;AAAA,SACEA,UADF,EAEEC,WAFF,EAGEC,SAHF,EAIEC,aAJF,QAKO,kBALP;AAOA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,MAAM,EAAE,EADW;AAEnBC,EAAAA,OAAO,EAAE,EAFU;AAGnBC,EAAAA,KAAK,EAAE,EAHY;AAInBC,EAAAA,OAAO,EAAE;AAJU,CAArB;AAOA,eAAe,UAASC,KAAK,GAAGL,YAAjB,EAA+BM,MAA/B,EAAuC;AACpD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKX,UAAL;AACE,+BACKS,KADL;AAEEJ,QAAAA,MAAM,EAAEK,MAAM,CAACE,OAFjB;AAGEJ,QAAAA,OAAO,EAAE;AAHX;;AAKF,SAAKP,WAAL;AACE,+BACKQ,KADL;AAEEH,QAAAA,OAAO,EAAEI,MAAM,CAACE,OAFlB;AAGEJ,QAAAA,OAAO,EAAE;AAHX;;AAKF,SAAKN,SAAL;AACE,+BACKO,KADL;AAEEF,QAAAA,KAAK,EAAEG,MAAM,CAACE,OAFhB;AAGEJ,QAAAA,OAAO,EAAE;AAHX;;AAKF,SAAKL,aAAL;AACE,+BACKM,KADL;AAEED,QAAAA,OAAO,EAAE;AAFX;;AAIF;AACE,aAAOC,KAAP;AAzBJ;AA2BD","sourcesContent":["import {\n  GET_SPELLS,\n  GET_CLASSES,\n  GET_RACES,\n  ITEMS_LOADING\n} from '../actions/types'\n\nconst initialState = {\n  spells: [],\n  classes: [],\n  races: [],\n  loading: false\n}\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_SPELLS:\n      return {\n        ...state,\n        spells: action.payload,\n        loading: false\n      }\n    case GET_CLASSES:\n      return {\n        ...state,\n        classes: action.payload,\n        loading: false\n      }\n    case GET_RACES:\n      return {\n        ...state,\n        races: action.payload,\n        loading: false\n      }\n    case ITEMS_LOADING:\n      return {\n        ...state,\n        loading: true\n      }\n    default:\n      return state\n  }\n}\n"]},"metadata":{},"sourceType":"module"}
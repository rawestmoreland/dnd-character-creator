{"ast":null,"code":"var _jsxFileName = \"/Users/richard/Desktop/ReactApps/dnd-project/client/src/components/CharacterList.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { Container, ListGroup, ListGroupItem, Spinner, Button, Row, Col } from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faAsterisk } from '@fortawesome/free-solid-svg-icons';\nimport { getCharacters, deleteCharacter } from '../actions/characterActions';\n\nclass CharacterList extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onDeleteClick = id => {\n      this.props.deleteCharacter(id);\n    };\n  }\n\n  componentDidMount() {\n    this.props.getCharacters();\n  }\n\n  render() {\n    const _this$props = this.props,\n          characters = _this$props.characters,\n          loading = _this$props.loading;\n    return React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, !loading ? React.createElement(ListGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, characters.map(({\n      _id,\n      name\n    }) => React.createElement(ListGroupItem, {\n      key: _id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, name), React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(Button, {\n      className: \"remove-btn\",\n      color: \"danger\",\n      size: \"sm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \"\\xD7\")))))) : React.createElement(Container, {\n      className: \"spinner-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(Spinner, {\n      style: {\n        width: '3rem',\n        height: '3rem'\n      },\n      color: \"secondary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    })));\n  }\n\n}\n\nCharacterList.propTypes = {\n  getCharacters: PropTypes.func.isRequired,\n  deleteCharacter: PropTypes.func.isRequired,\n  characters: PropTypes.array.isRequired,\n  loading: PropTypes.bool\n};\n\nconst mapStateToProps = state => ({\n  characters: state.character.characters,\n  loading: state.character.loading\n});\n\nexport default connect(mapStateToProps, {\n  getCharacters,\n  deleteCharacter\n})(CharacterList);","map":{"version":3,"sources":["/Users/richard/Desktop/ReactApps/dnd-project/client/src/components/CharacterList.js"],"names":["React","Component","connect","PropTypes","Link","Container","ListGroup","ListGroupItem","Spinner","Button","Row","Col","FontAwesomeIcon","faAsterisk","getCharacters","deleteCharacter","CharacterList","onDeleteClick","id","props","componentDidMount","render","characters","loading","map","_id","name","width","height","propTypes","func","isRequired","array","bool","mapStateToProps","state","character"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SACEC,SADF,EAEEC,SAFF,EAGEC,aAHF,EAIEC,OAJF,EAKEC,MALF,EAMEC,GANF,EAOEC,GAPF,QAQO,YARP;AASA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,UAAT,QAA2B,mCAA3B;AACA,SAASC,aAAT,EAAwBC,eAAxB,QAA+C,6BAA/C;;AAEA,MAAMC,aAAN,SAA4Bf,SAA5B,CAAsC;AAAA;AAAA;;AAAA,SAYpCgB,aAZoC,GAYpBC,EAAE,IAAI;AACpB,WAAKC,KAAL,CAAWJ,eAAX,CAA2BG,EAA3B;AACD,KAdmC;AAAA;;AACpCE,EAAAA,iBAAiB,GAAG;AAClB,SAAKD,KAAL,CAAWL,aAAX;AACD;;AAaDO,EAAAA,MAAM,GAAG;AAAA,wBACyB,KAAKF,KAD9B;AAAA,UACCG,UADD,eACCA,UADD;AAAA,UACaC,OADb,eACaA,OADb;AAEP,WACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,CAACA,OAAD,GACC,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGD,UAAU,CAACE,GAAX,CAAe,CAAC;AAAEC,MAAAA,GAAF;AAAOC,MAAAA;AAAP,KAAD,KACd,oBAAC,aAAD;AAAe,MAAA,GAAG,EAAED,GAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMC,IAAN,CADF,EAEE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAA+B,MAAA,KAAK,EAAC,QAArC;AAA8C,MAAA,IAAI,EAAC,IAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,CAFF,CADF,CADD,CADH,CADD,GAgBC,oBAAC,SAAD;AAAW,MAAA,SAAS,EAAC,mBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,OAAD;AACE,MAAA,KAAK,EAAE;AAAEC,QAAAA,KAAK,EAAE,MAAT;AAAiBC,QAAAA,MAAM,EAAE;AAAzB,OADT;AAEE,MAAA,KAAK,EAAC,WAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAjBJ,CADF;AA2BD;;AA7CmC;;AAAhCZ,a,CAKGa,S,GAAY;AACjBf,EAAAA,aAAa,EAAEX,SAAS,CAAC2B,IAAV,CAAeC,UADb;AAEjBhB,EAAAA,eAAe,EAAEZ,SAAS,CAAC2B,IAAV,CAAeC,UAFf;AAGjBT,EAAAA,UAAU,EAAEnB,SAAS,CAAC6B,KAAV,CAAgBD,UAHX;AAIjBR,EAAAA,OAAO,EAAEpB,SAAS,CAAC8B;AAJF,C;;AA2CrB,MAAMC,eAAe,GAAGC,KAAK,KAAK;AAChCb,EAAAA,UAAU,EAAEa,KAAK,CAACC,SAAN,CAAgBd,UADI;AAEhCC,EAAAA,OAAO,EAAEY,KAAK,CAACC,SAAN,CAAgBb;AAFO,CAAL,CAA7B;;AAKA,eAAerB,OAAO,CACpBgC,eADoB,EAEpB;AAAEpB,EAAAA,aAAF;AAAiBC,EAAAA;AAAjB,CAFoB,CAAP,CAGbC,aAHa,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\nimport { Link } from 'react-router-dom'\nimport {\n  Container,\n  ListGroup,\n  ListGroupItem,\n  Spinner,\n  Button,\n  Row,\n  Col\n} from 'reactstrap'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faAsterisk } from '@fortawesome/free-solid-svg-icons'\nimport { getCharacters, deleteCharacter } from '../actions/characterActions'\n\nclass CharacterList extends Component {\n  componentDidMount() {\n    this.props.getCharacters()\n  }\n\n  static propTypes = {\n    getCharacters: PropTypes.func.isRequired,\n    deleteCharacter: PropTypes.func.isRequired,\n    characters: PropTypes.array.isRequired,\n    loading: PropTypes.bool\n  }\n\n  onDeleteClick = id => {\n    this.props.deleteCharacter(id)\n  }\n\n  render() {\n    const { characters, loading } = this.props\n    return (\n      <Container>\n        {!loading ? (\n          <ListGroup>\n            {characters.map(({ _id, name }) => (\n              <ListGroupItem key={_id}>\n                <Row>\n                  <Col>{name}</Col>\n                  <Col>\n                    <Button className='remove-btn' color='danger' size='sm'>\n                      &times;\n                    </Button>\n                  </Col>\n                </Row>\n              </ListGroupItem>\n            ))}\n          </ListGroup>\n        ) : (\n          <Container className='spinner-container'>\n            <Spinner\n              style={{ width: '3rem', height: '3rem' }}\n              color='secondary'\n            />\n          </Container>\n        )}\n      </Container>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  characters: state.character.characters,\n  loading: state.character.loading\n})\n\nexport default connect(\n  mapStateToProps,\n  { getCharacters, deleteCharacter }\n)(CharacterList)\n"]},"metadata":{},"sourceType":"module"}
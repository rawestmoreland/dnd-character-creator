{"ast":null,"code":"var _jsxFileName = \"/Users/richard/Desktop/ReactApps/dnd-project/client/src/components/CharacterModal.js\";\nimport React, { Component } from 'react';\nimport { Button, Modal, ModalHeader, ModalBody, Form, FormGroup, Label, Input } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport { addCharacter } from '../actions/characterActions';\nimport PropTypes from 'prop-types';\n\nclass CharacterModal extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      // Modal is closed when page loads\n      modal: false,\n      charName: ''\n    };\n\n    this.toggle = () => {\n      this.setState({\n        modal: !this.state.modal\n      });\n    };\n\n    this.onChange = e => {\n      // Update the name state to show in the text box and have a name to submit\n      this.setState({\n        [e.target.charName]: e.target.value\n      });\n    };\n\n    this.onSubmit = e => {\n      // Prevent the page from refreshing on submit\n      e.preventDefault();\n      const newChracter = {\n        name: this.state.name\n      }; // Add new character to the database\n\n      this.props.addCharacter(newCharacter); // Close the modal\n\n      this.toggle();\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(Button, {\n      color: \"dark\",\n      style: {\n        marginBottom: '2rem',\n        marginLeft: '15px'\n      },\n      onClick: this.toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"New Character\"));\n  }\n\n}\n\nexport default connect({\n  addCharacter\n})(CharacterModal);","map":{"version":3,"sources":["/Users/richard/Desktop/ReactApps/dnd-project/client/src/components/CharacterModal.js"],"names":["React","Component","Button","Modal","ModalHeader","ModalBody","Form","FormGroup","Label","Input","connect","addCharacter","PropTypes","CharacterModal","state","modal","charName","toggle","setState","onChange","e","target","value","onSubmit","preventDefault","newChracter","name","props","newCharacter","render","marginBottom","marginLeft"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SACEC,MADF,EAEEC,KAFF,EAGEC,WAHF,EAIEC,SAJF,EAKEC,IALF,EAMEC,SANF,EAOEC,KAPF,EAQEC,KARF,QASO,YATP;AAUA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,YAAT,QAA6B,6BAA7B;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,cAAN,SAA6BZ,SAA7B,CAAuC;AAAA;AAAA;AAAA,SACrCa,KADqC,GAC7B;AACN;AACAC,MAAAA,KAAK,EAAE,KAFD;AAGNC,MAAAA,QAAQ,EAAE;AAHJ,KAD6B;;AAAA,SAQrCC,MARqC,GAQ5B,MAAM;AACb,WAAKC,QAAL,CAAc;AACZH,QAAAA,KAAK,EAAE,CAAC,KAAKD,KAAL,CAAWC;AADP,OAAd;AAGD,KAZoC;;AAAA,SAerCI,QAfqC,GAe1BC,CAAC,IAAI;AACd;AACA,WAAKF,QAAL,CAAc;AACZ,SAACE,CAAC,CAACC,MAAF,CAASL,QAAV,GAAqBI,CAAC,CAACC,MAAF,CAASC;AADlB,OAAd;AAGD,KApBoC;;AAAA,SAsBrCC,QAtBqC,GAsB1BH,CAAC,IAAI;AACd;AACAA,MAAAA,CAAC,CAACI,cAAF;AAEA,YAAMC,WAAW,GAAG;AAClBC,QAAAA,IAAI,EAAE,KAAKZ,KAAL,CAAWY;AADC,OAApB,CAJc,CAQd;;AACA,WAAKC,KAAL,CAAWhB,YAAX,CAAwBiB,YAAxB,EATc,CAWd;;AACA,WAAKX,MAAL;AACD,KAnCoC;AAAA;;AAqCrCY,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AACE,MAAA,KAAK,EAAC,MADR;AAEE,MAAA,KAAK,EAAE;AAAEC,QAAAA,YAAY,EAAE,MAAhB;AAAwBC,QAAAA,UAAU,EAAE;AAApC,OAFT;AAGE,MAAA,OAAO,EAAE,KAAKd,MAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,CADF;AAWD;;AAjDoC;;AAoDvC,eAAeP,OAAO,CAAC;AAAEC,EAAAA;AAAF,CAAD,CAAP,CAA0BE,cAA1B,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport {\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  Form,\n  FormGroup,\n  Label,\n  Input\n} from 'reactstrap'\nimport { connect } from 'react-redux'\nimport { addCharacter } from '../actions/characterActions'\nimport PropTypes from 'prop-types'\n\nclass CharacterModal extends Component {\n  state = {\n    // Modal is closed when page loads\n    modal: false,\n    charName: ''\n  }\n\n  // Toggle the modal visibility\n  toggle = () => {\n    this.setState({\n      modal: !this.state.modal\n    })\n  }\n\n  // Change the state of the text input variables for the POST requests\n  onChange = e => {\n    // Update the name state to show in the text box and have a name to submit\n    this.setState({\n      [e.target.charName]: e.target.value\n    })\n  }\n\n  onSubmit = e => {\n    // Prevent the page from refreshing on submit\n    e.preventDefault()\n\n    const newChracter = {\n      name: this.state.name\n    }\n\n    // Add new character to the database\n    this.props.addCharacter(newCharacter)\n\n    // Close the modal\n    this.toggle()\n  }\n\n  render() {\n    return (\n      <div>\n        <Button\n          color='dark'\n          style={{ marginBottom: '2rem', marginLeft: '15px' }}\n          onClick={this.toggle}\n        >\n          New Character\n        </Button>\n      </div>\n    )\n  }\n}\n\nexport default connect({ addCharacter })(CharacterModal)\n"]},"metadata":{},"sourceType":"module"}
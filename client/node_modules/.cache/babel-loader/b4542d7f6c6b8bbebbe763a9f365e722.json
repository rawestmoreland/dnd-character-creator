{"ast":null,"code":"import _defineProperty from \"/Users/richard/Desktop/ReactApps/dnd-project/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { GET_SPELLS, ITEMS_LOADING } from '../actions/types';\nconst initialState = {\n  spells: {},\n  loading: false\n};\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case GET_SPELLS:\n      return _objectSpread({}, state, {\n        spells: action.payload,\n        loading: false\n      });\n\n    case ITEMS_LOADING:\n      return _objectSpread({}, state, {\n        loading: true\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/richard/Desktop/ReactApps/dnd-project/src/reducers/spellReducer.js"],"names":["GET_SPELLS","ITEMS_LOADING","initialState","spells","loading","state","action","type","payload"],"mappings":";;;;;;AAAA,SAASA,UAAT,EAAqBC,aAArB,QAA0C,kBAA1C;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,MAAM,EAAE,EADW;AAEnBC,EAAAA,OAAO,EAAE;AAFU,CAArB;AAKA,eAAe,UAASC,KAAK,GAAGH,YAAjB,EAA+BI,MAA/B,EAAuC;AACpD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKP,UAAL;AACE,+BACKK,KADL;AAEEF,QAAAA,MAAM,EAAEG,MAAM,CAACE,OAFjB;AAGEJ,QAAAA,OAAO,EAAE;AAHX;;AAKF,SAAKH,aAAL;AACE,+BACKI,KADL;AAEED,QAAAA,OAAO,EAAE;AAFX;;AAIF;AACE,aAAOC,KAAP;AAbJ;AAeD","sourcesContent":["import { GET_SPELLS, ITEMS_LOADING } from '../actions/types'\n\nconst initialState = {\n  spells: {},\n  loading: false\n}\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_SPELLS:\n      return {\n        ...state,\n        spells: action.payload,\n        loading: false\n      }\n    case ITEMS_LOADING:\n      return {\n        ...state,\n        loading: true\n      }\n    default:\n      return state\n  }\n}\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/richard/Desktop/ReactApps/dnd-project/client/src/components/CharacterList.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { Container, ListGroup, ListGroupItem, Spinner, Button, Row, Col } from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faAsterisk } from '@fortawesome/free-solid-svg-icons';\nimport { getCharacters, deleteCharacter } from '../actions/characterActions';\n\nclass CharacterList extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onDeleteClick = id => {\n      this.props.deleteCharacter(id);\n    };\n  }\n\n  componentDidMount() {\n    this.props.getCharacters();\n  }\n\n  render() {\n    const _this$props = this.props,\n          characters = _this$props.characters,\n          loading = _this$props.loading;\n    return React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, !loading ? React.createElement(ListGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, Object.keys(characters).map(key => {\n      const name = characters[key].name;\n      const id = characters[key]._id;\n      return React.createElement(\"div\", {\n        key: key,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(ListGroupItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(Col, {\n        className: \"d-flex align-items-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, name), React.createElement(Col, {\n        className: \"d-flex justify-content-end\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(Button, {\n        className: \"remove-btn\",\n        color: \"danger\",\n        size: \"sm\",\n        onClick: this.onDeleteClick.bind(this, id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, \"X\"))))));\n    })) : React.createElement(Container, {\n      className: \"spinner-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(Spinner, {\n      style: {\n        width: '3rem',\n        height: '3rem'\n      },\n      color: \"secondary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    })));\n  }\n\n}\n\nCharacterList.propTypes = {\n  getCharacters: PropTypes.func.isRequired,\n  deleteCharacter: PropTypes.func.isRequired,\n  characters: PropTypes.array.isRequired,\n  loading: PropTypes.bool\n};\n\nconst mapStateToProps = state => ({\n  characters: state.character.characters,\n  loading: state.character.loading\n});\n\nexport default connect(mapStateToProps, {\n  getCharacters,\n  deleteCharacter\n})(CharacterList);","map":{"version":3,"sources":["/Users/richard/Desktop/ReactApps/dnd-project/client/src/components/CharacterList.js"],"names":["React","Component","connect","PropTypes","Link","Container","ListGroup","ListGroupItem","Spinner","Button","Row","Col","FontAwesomeIcon","faAsterisk","getCharacters","deleteCharacter","CharacterList","onDeleteClick","id","props","componentDidMount","render","characters","loading","Object","keys","map","key","name","_id","bind","width","height","propTypes","func","isRequired","array","bool","mapStateToProps","state","character"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SACEC,SADF,EAEEC,SAFF,EAGEC,aAHF,EAIEC,OAJF,EAKEC,MALF,EAMEC,GANF,EAOEC,GAPF,QAQO,YARP;AASA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,UAAT,QAA2B,mCAA3B;AACA,SAASC,aAAT,EAAwBC,eAAxB,QAA+C,6BAA/C;;AAEA,MAAMC,aAAN,SAA4Bf,SAA5B,CAAsC;AAAA;AAAA;;AAAA,SAYpCgB,aAZoC,GAYpBC,EAAE,IAAI;AACpB,WAAKC,KAAL,CAAWJ,eAAX,CAA2BG,EAA3B;AACD,KAdmC;AAAA;;AACpCE,EAAAA,iBAAiB,GAAG;AAClB,SAAKD,KAAL,CAAWL,aAAX;AACD;;AAaDO,EAAAA,MAAM,GAAG;AAAA,wBACyB,KAAKF,KAD9B;AAAA,UACCG,UADD,eACCA,UADD;AAAA,UACaC,OADb,eACaA,OADb;AAEP,WACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,CAACA,OAAD,GACC,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGC,MAAM,CAACC,IAAP,CAAYH,UAAZ,EAAwBI,GAAxB,CAA4BC,GAAG,IAAI;AAClC,YAAMC,IAAI,GAAGN,UAAU,CAACK,GAAD,CAAV,CAAgBC,IAA7B;AACA,YAAMV,EAAE,GAAGI,UAAU,CAACK,GAAD,CAAV,CAAgBE,GAA3B;AACA,aACE;AAAK,QAAA,GAAG,EAAEF,GAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,EAAE,EAAEC,IAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,GAAD;AAAK,QAAA,SAAS,EAAC,2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA4CA,IAA5C,CADF,EAEE,oBAAC,GAAD;AAAK,QAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AACE,QAAA,SAAS,EAAC,YADZ;AAEE,QAAA,KAAK,EAAC,QAFR;AAGE,QAAA,IAAI,EAAC,IAHP;AAIE,QAAA,OAAO,EAAE,KAAKX,aAAL,CAAmBa,IAAnB,CAAwB,IAAxB,EAA8BZ,EAA9B,CAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,CAFF,CADF,CADF,CADF,CADF;AAqBD,KAxBA,CADH,CADD,GA6BC,oBAAC,SAAD;AAAW,MAAA,SAAS,EAAC,mBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,OAAD;AACE,MAAA,KAAK,EAAE;AAAEa,QAAAA,KAAK,EAAE,MAAT;AAAiBC,QAAAA,MAAM,EAAE;AAAzB,OADT;AAEE,MAAA,KAAK,EAAC,WAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CA9BJ,CADF;AAwCD;;AA1DmC;;AAAhChB,a,CAKGiB,S,GAAY;AACjBnB,EAAAA,aAAa,EAAEX,SAAS,CAAC+B,IAAV,CAAeC,UADb;AAEjBpB,EAAAA,eAAe,EAAEZ,SAAS,CAAC+B,IAAV,CAAeC,UAFf;AAGjBb,EAAAA,UAAU,EAAEnB,SAAS,CAACiC,KAAV,CAAgBD,UAHX;AAIjBZ,EAAAA,OAAO,EAAEpB,SAAS,CAACkC;AAJF,C;;AAwDrB,MAAMC,eAAe,GAAGC,KAAK,KAAK;AAChCjB,EAAAA,UAAU,EAAEiB,KAAK,CAACC,SAAN,CAAgBlB,UADI;AAEhCC,EAAAA,OAAO,EAAEgB,KAAK,CAACC,SAAN,CAAgBjB;AAFO,CAAL,CAA7B;;AAKA,eAAerB,OAAO,CACpBoC,eADoB,EAEpB;AAAExB,EAAAA,aAAF;AAAiBC,EAAAA;AAAjB,CAFoB,CAAP,CAGbC,aAHa,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\nimport { Link } from 'react-router-dom'\nimport {\n  Container,\n  ListGroup,\n  ListGroupItem,\n  Spinner,\n  Button,\n  Row,\n  Col\n} from 'reactstrap'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faAsterisk } from '@fortawesome/free-solid-svg-icons'\nimport { getCharacters, deleteCharacter } from '../actions/characterActions'\n\nclass CharacterList extends Component {\n  componentDidMount() {\n    this.props.getCharacters()\n  }\n\n  static propTypes = {\n    getCharacters: PropTypes.func.isRequired,\n    deleteCharacter: PropTypes.func.isRequired,\n    characters: PropTypes.array.isRequired,\n    loading: PropTypes.bool\n  }\n\n  onDeleteClick = id => {\n    this.props.deleteCharacter(id)\n  }\n\n  render() {\n    const { characters, loading } = this.props\n    return (\n      <Container>\n        {!loading ? (\n          <ListGroup>\n            {Object.keys(characters).map(key => {\n              const name = characters[key].name\n              const id = characters[key]._id\n              return (\n                <div key={key}>\n                  <Link to={name}>\n                    <ListGroupItem>\n                      <Row>\n                        <Col className='d-flex align-items-center'>{name}</Col>\n                        <Col className='d-flex justify-content-end'>\n                          <Button\n                            className='remove-btn'\n                            color='danger'\n                            size='sm'\n                            onClick={this.onDeleteClick.bind(this, id)}\n                          >\n                            X\n                          </Button>\n                        </Col>\n                      </Row>\n                    </ListGroupItem>\n                  </Link>\n                </div>\n              )\n            })}\n          </ListGroup>\n        ) : (\n          <Container className='spinner-container'>\n            <Spinner\n              style={{ width: '3rem', height: '3rem' }}\n              color='secondary'\n            />\n          </Container>\n        )}\n      </Container>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  characters: state.character.characters,\n  loading: state.character.loading\n})\n\nexport default connect(\n  mapStateToProps,\n  { getCharacters, deleteCharacter }\n)(CharacterList)\n"]},"metadata":{},"sourceType":"module"}
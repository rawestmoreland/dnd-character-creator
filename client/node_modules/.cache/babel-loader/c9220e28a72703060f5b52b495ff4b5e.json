{"ast":null,"code":"var _jsxFileName = \"/Users/richard/Desktop/ReactApps/dnd-project/client/src/components/CharacterList.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { Container, ListGroup, ListGroupItem, Spinner, Button, Row, Col } from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTimesCircle } from '@fortawesome/free-solid-svg-icons';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport { getCharacters, deleteCharacter } from '../actions/characterActions';\nimport CharacterModal from './CharacterModal';\n\nclass CharacterList extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      edit: false\n    };\n\n    this.onDeleteClick = id => {\n      this.props.deleteCharacter(id);\n\n      if (this.props.characters.length === 1) {\n        this.setState({\n          edit: false\n        });\n      }\n    };\n\n    this.navigate = name => {\n      this.props.history.push(\"/\".concat(name));\n    };\n  }\n\n  componentDidMount() {\n    this.props.getCharacters();\n  }\n\n  render() {\n    const _this$props = this.props,\n          characters = _this$props.characters,\n          loading = _this$props.loading;\n    return React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(CharacterModal, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }), !loading ? React.createElement(ListGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(TransitionGroup, {\n      className: \"shopping-list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, characters.map(({\n      _id,\n      name\n    }) => React.createElement(CSSTransition, {\n      key: _id,\n      timeout: 500,\n      classNames: \"fade\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(ListGroupItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(Col, {\n      xs: \"11\",\n      className: \"d-flex align-items-center\",\n      style: {\n        cursor: 'pointer'\n      },\n      onClick: this.navigate.bind(this, name),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, name), React.createElement(Col, {\n      xs: \"1\",\n      className: \"d-flex justify-content-end\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(FontAwesomeIcon, {\n      icon: faTimesCircle,\n      style: {\n        cursor: 'pointer'\n      },\n      color: \"red\",\n      onClick: this.onDeleteClick.bind(this, _id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    })))))))) : React.createElement(Container, {\n      className: \"spinner-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(Spinner, {\n      style: {\n        width: '3rem',\n        height: '3rem'\n      },\n      color: \"secondary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    })));\n  }\n\n}\n\nCharacterList.propTypes = {\n  getCharacters: PropTypes.func.isRequired,\n  deleteCharacter: PropTypes.func.isRequired,\n  characters: PropTypes.array.isRequired,\n  loading: PropTypes.bool\n};\n\nconst mapStateToProps = state => ({\n  characters: state.character.characters,\n  loading: state.character.loading\n});\n\nexport default connect(mapStateToProps, {\n  getCharacters,\n  deleteCharacter\n})(CharacterList);","map":{"version":3,"sources":["/Users/richard/Desktop/ReactApps/dnd-project/client/src/components/CharacterList.js"],"names":["React","Component","connect","PropTypes","Link","Container","ListGroup","ListGroupItem","Spinner","Button","Row","Col","FontAwesomeIcon","faTimesCircle","CSSTransition","TransitionGroup","getCharacters","deleteCharacter","CharacterModal","CharacterList","state","edit","onDeleteClick","id","props","characters","length","setState","navigate","name","history","push","componentDidMount","render","loading","map","_id","cursor","bind","width","height","propTypes","func","isRequired","array","bool","mapStateToProps","character"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\nimport { Link } from 'react-router-dom'\nimport {\n  Container,\n  ListGroup,\n  ListGroupItem,\n  Spinner,\n  Button,\n  Row,\n  Col\n} from 'reactstrap'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimesCircle } from '@fortawesome/free-solid-svg-icons'\nimport { CSSTransition, TransitionGroup } from 'react-transition-group'\nimport { getCharacters, deleteCharacter } from '../actions/characterActions'\nimport CharacterModal from './CharacterModal'\n\nclass CharacterList extends Component {\n  state = {\n    edit: false\n  }\n\n  componentDidMount() {\n    this.props.getCharacters()\n  }\n\n  static propTypes = {\n    getCharacters: PropTypes.func.isRequired,\n    deleteCharacter: PropTypes.func.isRequired,\n    characters: PropTypes.array.isRequired,\n    loading: PropTypes.bool\n  }\n\n  onDeleteClick = id => {\n    this.props.deleteCharacter(id)\n\n    if (this.props.characters.length === 1) {\n      this.setState({\n        edit: false\n      })\n    }\n  }\n\n  navigate = name => {\n    this.props.history.push(`/${name}`)\n  }\n\n  render() {\n    const { characters, loading } = this.props\n\n    return (\n      <Container>\n        <CharacterModal />\n        {!loading ? (\n          <ListGroup>\n            <TransitionGroup className='shopping-list'>\n              {characters.map(({ _id, name }) => (\n                <CSSTransition key={_id} timeout={500} classNames='fade'>\n                  <ListGroupItem>\n                    <Row>\n                      <Col\n                        xs='11'\n                        className='d-flex align-items-center'\n                        style={{ cursor: 'pointer' }}\n                        onClick={this.navigate.bind(this, name)}\n                      >\n                        {name}\n                      </Col>\n                      <Col xs='1' className='d-flex justify-content-end'>\n                        <FontAwesomeIcon\n                          icon={faTimesCircle}\n                          style={{ cursor: 'pointer' }}\n                          color='red'\n                          onClick={this.onDeleteClick.bind(this, _id)}\n                        />\n                      </Col>\n                    </Row>\n                  </ListGroupItem>\n                </CSSTransition>\n              ))}\n            </TransitionGroup>\n          </ListGroup>\n        ) : (\n          <Container className='spinner-container'>\n            <Spinner\n              style={{ width: '3rem', height: '3rem' }}\n              color='secondary'\n            />\n          </Container>\n        )}\n      </Container>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  characters: state.character.characters,\n  loading: state.character.loading\n})\n\nexport default connect(\n  mapStateToProps,\n  { getCharacters, deleteCharacter }\n)(CharacterList)\n"]},"metadata":{},"sourceType":"module"}
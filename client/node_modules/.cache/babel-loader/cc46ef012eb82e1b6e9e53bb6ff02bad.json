{"ast":null,"code":"var _jsxFileName = \"/Users/richard/Desktop/ReactApps/dnd-project/client/src/components/CharacterList.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { Container, ListGroup, ListGroupItem, Spinner, Button, Row, Col } from 'reactstrap';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport { getCharacters, deleteCharacter } from '../actions/characterActions';\nimport CharacterModal from './CharacterModal';\n\nclass CharacterList extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      edit: false\n    };\n\n    this.onDeleteClick = id => {\n      this.props.deleteCharacter(id);\n    };\n\n    this.edit = () => {\n      this.setState({\n        edit: !this.state.edit\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.props.getCharacters();\n  }\n\n  render() {\n    const _this$props = this.props,\n          characters = _this$props.characters,\n          loading = _this$props.loading;\n    return React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(Row, {\n      block: true,\n      className: \"pl-3 pr-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(CharacterModal, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    })), !loading ? React.createElement(ListGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(TransitionGroup, {\n      className: \"shopping-list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, characters.map(({\n      _id,\n      name\n    }) => React.createElement(CSSTransition, {\n      key: _id,\n      timeout: 500,\n      classNames: \"fade\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, !this.state.edit ? React.createElement(Link, {\n      to: name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(ListGroupItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, name)) : React.createElement(ListGroupItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(Col, {\n      xs: \"10\",\n      className: \"d-flex align-items-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, name), React.createElement(Col, {\n      xs: \"2\",\n      className: \"d-flex justify-content-end\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(Button, {\n      className: \"remove-btn\",\n      color: \"danger\",\n      size: \"sm\",\n      onClick: this.onDeleteClick.bind(this, _id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"\\xD7\")))))))) : React.createElement(Container, {\n      className: \"spinner-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(Spinner, {\n      style: {\n        width: '3rem',\n        height: '3rem'\n      },\n      color: \"secondary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    })));\n  }\n\n}\n\nCharacterList.propTypes = {\n  getCharacters: PropTypes.func.isRequired,\n  deleteCharacter: PropTypes.func.isRequired,\n  characters: PropTypes.array.isRequired,\n  loading: PropTypes.bool\n};\n\nconst mapStateToProps = state => ({\n  characters: state.character.characters,\n  loading: state.character.loading\n});\n\nexport default connect(mapStateToProps, {\n  getCharacters,\n  deleteCharacter\n})(CharacterList);","map":{"version":3,"sources":["/Users/richard/Desktop/ReactApps/dnd-project/client/src/components/CharacterList.js"],"names":["React","Component","connect","PropTypes","Link","Container","ListGroup","ListGroupItem","Spinner","Button","Row","Col","CSSTransition","TransitionGroup","getCharacters","deleteCharacter","CharacterModal","CharacterList","state","edit","onDeleteClick","id","props","setState","componentDidMount","render","characters","loading","map","_id","name","bind","width","height","propTypes","func","isRequired","array","bool","mapStateToProps","character"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\nimport { Link } from 'react-router-dom'\nimport {\n  Container,\n  ListGroup,\n  ListGroupItem,\n  Spinner,\n  Button,\n  Row,\n  Col\n} from 'reactstrap'\nimport { CSSTransition, TransitionGroup } from 'react-transition-group'\nimport { getCharacters, deleteCharacter } from '../actions/characterActions'\nimport CharacterModal from './CharacterModal'\n\nclass CharacterList extends Component {\n  state = {\n    edit: false\n  }\n\n  componentDidMount() {\n    this.props.getCharacters()\n  }\n\n  static propTypes = {\n    getCharacters: PropTypes.func.isRequired,\n    deleteCharacter: PropTypes.func.isRequired,\n    characters: PropTypes.array.isRequired,\n    loading: PropTypes.bool\n  }\n\n  onDeleteClick = id => {\n    this.props.deleteCharacter(id)\n  }\n\n  edit = () => {\n    this.setState({\n      edit: !this.state.edit\n    })\n  }\n\n  render() {\n    const { characters, loading } = this.props\n\n    return (\n      <Container>\n        <Row block className='pl-3 pr-3'>\n          <CharacterModal />\n        </Row>\n        {!loading ? (\n          <ListGroup>\n            <TransitionGroup className='shopping-list'>\n              {characters.map(({ _id, name }) => (\n                <CSSTransition key={_id} timeout={500} classNames='fade'>\n                  {!this.state.edit ? (\n                    <Link to={name}>\n                      <ListGroupItem>{name}</ListGroupItem>\n                    </Link>\n                  ) : (\n                    <ListGroupItem>\n                      <Row>\n                        <Col xs='10' className='d-flex align-items-center'>\n                          {name}\n                        </Col>\n                        <Col xs='2' className='d-flex justify-content-end'>\n                          <Button\n                            className='remove-btn'\n                            color='danger'\n                            size='sm'\n                            onClick={this.onDeleteClick.bind(this, _id)}\n                          >\n                            &times;\n                          </Button>\n                        </Col>\n                      </Row>\n                    </ListGroupItem>\n                  )}\n                </CSSTransition>\n              ))}\n            </TransitionGroup>\n          </ListGroup>\n        ) : (\n          <Container className='spinner-container'>\n            <Spinner\n              style={{ width: '3rem', height: '3rem' }}\n              color='secondary'\n            />\n          </Container>\n        )}\n      </Container>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  characters: state.character.characters,\n  loading: state.character.loading\n})\n\nexport default connect(\n  mapStateToProps,\n  { getCharacters, deleteCharacter }\n)(CharacterList)\n"]},"metadata":{},"sourceType":"module"}
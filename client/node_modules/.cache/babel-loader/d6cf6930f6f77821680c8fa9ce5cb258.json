{"ast":null,"code":"var _jsxFileName = \"/Users/richard/Desktop/ReactApps/dnd-project/client/src/components/CharacterModal.js\";\nimport React, { Component } from 'react';\nimport { Button, Modal, ModalHeader, ModalBody, Form, FormGroup, Label, Input } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport { addCharacter } from '../actions/characterActions';\nimport { getClasses, getRaces } from '../actions/externalAPIActions';\nimport PropTypes from 'prop-types';\n\nclass CharacterModal extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      // Modal is closed when page loads\n      modal: false,\n      name: ''\n    };\n\n    this.toggle = () => {\n      this.setState({\n        modal: !this.state.modal\n      });\n    };\n\n    this.onChange = e => {\n      // Update the name state to show in the text box and have a name to submit\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.onSubmit = e => {\n      // Prevent the page from refreshing on submit\n      e.preventDefault();\n      const newCharacter = {\n        name: this.state.name\n      }; // Add new character to the database\n\n      this.props.addCharacter(newCharacter); // Close the modal\n\n      this.toggle();\n    };\n  }\n\n  componentDidMount() {\n    this.props.getClasses();\n    this.props.getRaces();\n  } // Toggle the modal visibility\n\n\n  render() {\n    console.log(\"RACES: \".concat(this.props.races));\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(Button, {\n      color: \"dark\",\n      style: {\n        marginBottom: '2rem'\n      },\n      onClick: this.toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"New Character\"), React.createElement(Modal, {\n      isOpen: this.state.modal,\n      toggle: this.toggle,\n      centered: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(ModalHeader, {\n      toggle: this.toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"Add a New Character\"), React.createElement(ModalBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(Form, {\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"Character Name\"), React.createElement(Input, {\n      type: \"text\",\n      name: \"name\",\n      id: \"name\",\n      placeholder: \"Character Name\",\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }), React.createElement(Label, {\n      for: \"class\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"Class\"), React.createElement(Input, {\n      type: \"select\",\n      name: \"class\",\n      id: \"class\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }), React.createElement(Button, {\n      color: \"dark\",\n      style: {\n        marginTop: '2rem'\n      },\n      block: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"Add Character\"))))));\n  }\n\n}\n\nCharacterModal.propTypes = {\n  getClasses: PropTypes.func.isRequired,\n  addCharacter: PropTypes.func.isRequired,\n  getRaces: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  classes: state.classes,\n  races: state.races.races\n});\n\nexport default connect(mapStateToProps, {\n  addCharacter,\n  getClasses,\n  getRaces\n})(CharacterModal);","map":{"version":3,"sources":["/Users/richard/Desktop/ReactApps/dnd-project/client/src/components/CharacterModal.js"],"names":["React","Component","Button","Modal","ModalHeader","ModalBody","Form","FormGroup","Label","Input","connect","addCharacter","getClasses","getRaces","PropTypes","CharacterModal","state","modal","name","toggle","setState","onChange","e","target","value","onSubmit","preventDefault","newCharacter","props","componentDidMount","render","console","log","races","marginBottom","marginTop","propTypes","func","isRequired","mapStateToProps","classes"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport {\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  Form,\n  FormGroup,\n  Label,\n  Input\n} from 'reactstrap'\nimport { connect } from 'react-redux'\nimport { addCharacter } from '../actions/characterActions'\nimport { getClasses, getRaces } from '../actions/externalAPIActions'\nimport PropTypes from 'prop-types'\n\nclass CharacterModal extends Component {\n  state = {\n    // Modal is closed when page loads\n    modal: false,\n    name: ''\n  }\n\n  static propTypes = {\n    getClasses: PropTypes.func.isRequired,\n    addCharacter: PropTypes.func.isRequired,\n    getRaces: PropTypes.func.isRequired\n  }\n\n  componentDidMount() {\n    this.props.getClasses()\n    this.props.getRaces()\n  }\n\n  // Toggle the modal visibility\n  toggle = () => {\n    this.setState({\n      modal: !this.state.modal\n    })\n  }\n\n  // Change the state of the text input variables for the POST requests\n  onChange = e => {\n    // Update the name state to show in the text box and have a name to submit\n    this.setState({\n      [e.target.name]: e.target.value\n    })\n  }\n\n  onSubmit = e => {\n    // Prevent the page from refreshing on submit\n    e.preventDefault()\n\n    const newCharacter = {\n      name: this.state.name\n    }\n\n    // Add new character to the database\n    this.props.addCharacter(newCharacter)\n\n    // Close the modal\n    this.toggle()\n  }\n\n  render() {\n    console.log(`RACES: ${this.props.races}`)\n    return (\n      <div>\n        <Button\n          color='dark'\n          style={{ marginBottom: '2rem' }}\n          onClick={this.toggle}\n        >\n          New Character\n        </Button>\n        <Modal isOpen={this.state.modal} toggle={this.toggle} centered={true}>\n          <ModalHeader toggle={this.toggle}>Add a New Character</ModalHeader>\n          <ModalBody>\n            <Form onSubmit={this.onSubmit}>\n              <FormGroup>\n                <Label for='name'>Character Name</Label>\n                <Input\n                  type='text'\n                  name='name'\n                  id='name'\n                  placeholder='Character Name'\n                  onChange={this.onChange}\n                />\n                <Label for='class'>Class</Label>\n                <Input type='select' name='class' id='class' />\n                <Button color='dark' style={{ marginTop: '2rem' }} block>\n                  Add Character\n                </Button>\n              </FormGroup>\n            </Form>\n          </ModalBody>\n        </Modal>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  classes: state.classes,\n  races: state.races.races\n})\n\nexport default connect(\n  mapStateToProps,\n  { addCharacter, getClasses, getRaces }\n)(CharacterModal)\n"]},"metadata":{},"sourceType":"module"}